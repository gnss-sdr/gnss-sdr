// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: galileo_ephemeris.proto

#include "galileo_ephemeris.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace gnss_sdr {
class GalileoEphemerisDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GalileoEphemeris> _instance;
} _GalileoEphemeris_default_instance_;
}  // namespace gnss_sdr
static void InitDefaultsscc_info_GalileoEphemeris_galileo_5fephemeris_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gnss_sdr::_GalileoEphemeris_default_instance_;
    new (ptr) ::gnss_sdr::GalileoEphemeris();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gnss_sdr::GalileoEphemeris::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GalileoEphemeris_galileo_5fephemeris_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GalileoEphemeris_galileo_5fephemeris_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_galileo_5fephemeris_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_galileo_5fephemeris_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_galileo_5fephemeris_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_galileo_5fephemeris_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, prn_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, m_0_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, delta_n_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, ecc_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, sqrta_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, omega_0_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, i_0_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, omega_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, omegadot_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, idot_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, cuc_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, cus_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, crc_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, crs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, cic_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, cis_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, toe_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, toc_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, af0_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, af1_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, af2_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, satclkdrift_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, dtr_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, wn_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, tow_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, iod_ephemeris_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, iod_nav_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, sisa_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e5a_hs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e5b_hs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e1b_hs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e5a_dvs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e5b_dvs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, e1b_dvs_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, bgd_e1e5a_),
  PROTOBUF_FIELD_OFFSET(::gnss_sdr::GalileoEphemeris, bgd_e1e5b_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gnss_sdr::GalileoEphemeris)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gnss_sdr::_GalileoEphemeris_default_instance_),
};

const char descriptor_table_protodef_galileo_5fephemeris_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027galileo_ephemeris.proto\022\010gnss_sdr\"\257\004\n\020"
  "GalileoEphemeris\022\013\n\003PRN\030\001 \001(\005\022\013\n\003M_0\030\002 \001"
  "(\001\022\017\n\007delta_n\030\003 \001(\001\022\013\n\003ecc\030\004 \001(\001\022\r\n\005sqrt"
  "A\030\005 \001(\001\022\017\n\007OMEGA_0\030\006 \001(\001\022\013\n\003i_0\030\007 \001(\001\022\r\n"
  "\005omega\030\010 \001(\001\022\020\n\010OMEGAdot\030\t \001(\001\022\014\n\004idot\030\n"
  " \001(\001\022\013\n\003Cuc\030\013 \001(\001\022\013\n\003Cus\030\014 \001(\001\022\013\n\003Crc\030\r "
  "\001(\001\022\013\n\003Crs\030\016 \001(\001\022\013\n\003Cic\030\017 \001(\001\022\013\n\003Cis\030\020 \001"
  "(\001\022\013\n\003toe\030\021 \001(\005\022\013\n\003toc\030\022 \001(\005\022\013\n\003af0\030\023 \001("
  "\001\022\013\n\003af1\030\024 \001(\001\022\013\n\003af2\030\025 \001(\001\022\023\n\013satClkDri"
  "ft\030\026 \001(\001\022\013\n\003dtr\030\027 \001(\001\022\n\n\002WN\030\030 \001(\005\022\013\n\003tow"
  "\030\031 \001(\005\022\025\n\rIOD_ephemeris\030\032 \001(\005\022\017\n\007IOD_nav"
  "\030\033 \001(\005\022\014\n\004SISA\030\034 \001(\005\022\016\n\006E5a_HS\030\035 \001(\005\022\016\n\006"
  "E5b_HS\030\036 \001(\005\022\016\n\006E1B_HS\030\037 \001(\005\022\017\n\007E5a_DVS\030"
  "  \001(\010\022\017\n\007E5b_DVS\030! \001(\010\022\017\n\007E1B_DVS\030\" \001(\010\022"
  "\021\n\tBGD_E1E5a\030# \001(\001\022\021\n\tBGD_E1E5b\030$ \001(\001b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_galileo_5fephemeris_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_galileo_5fephemeris_2eproto_sccs[1] = {
  &scc_info_GalileoEphemeris_galileo_5fephemeris_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_galileo_5fephemeris_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_galileo_5fephemeris_2eproto = {
  false, false, descriptor_table_protodef_galileo_5fephemeris_2eproto, "galileo_ephemeris.proto", 605,
  &descriptor_table_galileo_5fephemeris_2eproto_once, descriptor_table_galileo_5fephemeris_2eproto_sccs, descriptor_table_galileo_5fephemeris_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_galileo_5fephemeris_2eproto::offsets,
  file_level_metadata_galileo_5fephemeris_2eproto, 1, file_level_enum_descriptors_galileo_5fephemeris_2eproto, file_level_service_descriptors_galileo_5fephemeris_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_galileo_5fephemeris_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_galileo_5fephemeris_2eproto)), true);
namespace gnss_sdr {

// ===================================================================

void GalileoEphemeris::InitAsDefaultInstance() {
}
class GalileoEphemeris::_Internal {
 public:
};

GalileoEphemeris::GalileoEphemeris(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gnss_sdr.GalileoEphemeris)
}
GalileoEphemeris::GalileoEphemeris(const GalileoEphemeris& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&m_0_, &from.m_0_,
    static_cast<size_t>(reinterpret_cast<char*>(&bgd_e1e5b_) -
    reinterpret_cast<char*>(&m_0_)) + sizeof(bgd_e1e5b_));
  // @@protoc_insertion_point(copy_constructor:gnss_sdr.GalileoEphemeris)
}

void GalileoEphemeris::SharedCtor() {
  ::memset(&m_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgd_e1e5b_) -
      reinterpret_cast<char*>(&m_0_)) + sizeof(bgd_e1e5b_));
}

GalileoEphemeris::~GalileoEphemeris() {
  // @@protoc_insertion_point(destructor:gnss_sdr.GalileoEphemeris)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GalileoEphemeris::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GalileoEphemeris::ArenaDtor(void* object) {
  GalileoEphemeris* _this = reinterpret_cast< GalileoEphemeris* >(object);
  (void)_this;
}
void GalileoEphemeris::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GalileoEphemeris::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GalileoEphemeris& GalileoEphemeris::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GalileoEphemeris_galileo_5fephemeris_2eproto.base);
  return *internal_default_instance();
}


void GalileoEphemeris::Clear() {
// @@protoc_insertion_point(message_clear_start:gnss_sdr.GalileoEphemeris)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&m_0_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bgd_e1e5b_) -
      reinterpret_cast<char*>(&m_0_)) + sizeof(bgd_e1e5b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GalileoEphemeris::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 PRN = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          prn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double M_0 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          m_0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double delta_n = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          delta_n_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double ecc = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          ecc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double sqrtA = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          sqrta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double OMEGA_0 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          omega_0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double i_0 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          i_0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double omega = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 65)) {
          omega_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double OMEGAdot = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          omegadot_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double idot = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          idot_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Cuc = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 89)) {
          cuc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Cus = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 97)) {
          cus_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Crc = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          crc_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Crs = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 113)) {
          crs_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Cic = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 121)) {
          cic_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double Cis = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 129)) {
          cis_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 toe = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          toe_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 toc = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          toc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double af0 = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 153)) {
          af0_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double af1 = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 161)) {
          af1_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double af2 = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 169)) {
          af2_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double satClkDrift = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 177)) {
          satclkdrift_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double dtr = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 185)) {
          dtr_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 WN = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          wn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 tow = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          tow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 IOD_ephemeris = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          iod_ephemeris_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 IOD_nav = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          iod_nav_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SISA = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          sisa_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 E5a_HS = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          e5a_hs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 E5b_HS = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          e5b_hs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 E1B_HS = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          e1b_hs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool E5a_DVS = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          e5a_dvs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool E5b_DVS = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          e5b_dvs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool E1B_DVS = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          e1b_dvs_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double BGD_E1E5a = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          bgd_e1e5a_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double BGD_E1E5b = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          bgd_e1e5b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GalileoEphemeris::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnss_sdr.GalileoEphemeris)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 PRN = 1;
  if (this->prn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_prn(), target);
  }

  // double M_0 = 2;
  if (!(this->m_0() <= 0 && this->m_0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_m_0(), target);
  }

  // double delta_n = 3;
  if (!(this->delta_n() <= 0 && this->delta_n() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_delta_n(), target);
  }

  // double ecc = 4;
  if (!(this->ecc() <= 0 && this->ecc() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_ecc(), target);
  }

  // double sqrtA = 5;
  if (!(this->sqrta() <= 0 && this->sqrta() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_sqrta(), target);
  }

  // double OMEGA_0 = 6;
  if (!(this->omega_0() <= 0 && this->omega_0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_omega_0(), target);
  }

  // double i_0 = 7;
  if (!(this->i_0() <= 0 && this->i_0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_i_0(), target);
  }

  // double omega = 8;
  if (!(this->omega() <= 0 && this->omega() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(8, this->_internal_omega(), target);
  }

  // double OMEGAdot = 9;
  if (!(this->omegadot() <= 0 && this->omegadot() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_omegadot(), target);
  }

  // double idot = 10;
  if (!(this->idot() <= 0 && this->idot() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_idot(), target);
  }

  // double Cuc = 11;
  if (!(this->cuc() <= 0 && this->cuc() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(11, this->_internal_cuc(), target);
  }

  // double Cus = 12;
  if (!(this->cus() <= 0 && this->cus() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(12, this->_internal_cus(), target);
  }

  // double Crc = 13;
  if (!(this->crc() <= 0 && this->crc() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_crc(), target);
  }

  // double Crs = 14;
  if (!(this->crs() <= 0 && this->crs() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(14, this->_internal_crs(), target);
  }

  // double Cic = 15;
  if (!(this->cic() <= 0 && this->cic() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(15, this->_internal_cic(), target);
  }

  // double Cis = 16;
  if (!(this->cis() <= 0 && this->cis() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(16, this->_internal_cis(), target);
  }

  // int32 toe = 17;
  if (this->toe() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(17, this->_internal_toe(), target);
  }

  // int32 toc = 18;
  if (this->toc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(18, this->_internal_toc(), target);
  }

  // double af0 = 19;
  if (!(this->af0() <= 0 && this->af0() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(19, this->_internal_af0(), target);
  }

  // double af1 = 20;
  if (!(this->af1() <= 0 && this->af1() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(20, this->_internal_af1(), target);
  }

  // double af2 = 21;
  if (!(this->af2() <= 0 && this->af2() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(21, this->_internal_af2(), target);
  }

  // double satClkDrift = 22;
  if (!(this->satclkdrift() <= 0 && this->satclkdrift() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(22, this->_internal_satclkdrift(), target);
  }

  // double dtr = 23;
  if (!(this->dtr() <= 0 && this->dtr() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(23, this->_internal_dtr(), target);
  }

  // int32 WN = 24;
  if (this->wn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(24, this->_internal_wn(), target);
  }

  // int32 tow = 25;
  if (this->tow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(25, this->_internal_tow(), target);
  }

  // int32 IOD_ephemeris = 26;
  if (this->iod_ephemeris() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(26, this->_internal_iod_ephemeris(), target);
  }

  // int32 IOD_nav = 27;
  if (this->iod_nav() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(27, this->_internal_iod_nav(), target);
  }

  // int32 SISA = 28;
  if (this->sisa() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(28, this->_internal_sisa(), target);
  }

  // int32 E5a_HS = 29;
  if (this->e5a_hs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(29, this->_internal_e5a_hs(), target);
  }

  // int32 E5b_HS = 30;
  if (this->e5b_hs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(30, this->_internal_e5b_hs(), target);
  }

  // int32 E1B_HS = 31;
  if (this->e1b_hs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(31, this->_internal_e1b_hs(), target);
  }

  // bool E5a_DVS = 32;
  if (this->e5a_dvs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(32, this->_internal_e5a_dvs(), target);
  }

  // bool E5b_DVS = 33;
  if (this->e5b_dvs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(33, this->_internal_e5b_dvs(), target);
  }

  // bool E1B_DVS = 34;
  if (this->e1b_dvs() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(34, this->_internal_e1b_dvs(), target);
  }

  // double BGD_E1E5a = 35;
  if (!(this->bgd_e1e5a() <= 0 && this->bgd_e1e5a() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(35, this->_internal_bgd_e1e5a(), target);
  }

  // double BGD_E1E5b = 36;
  if (!(this->bgd_e1e5b() <= 0 && this->bgd_e1e5b() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(36, this->_internal_bgd_e1e5b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gnss_sdr.GalileoEphemeris)
  return target;
}

size_t GalileoEphemeris::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnss_sdr.GalileoEphemeris)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double M_0 = 2;
  if (!(this->m_0() <= 0 && this->m_0() >= 0)) {
    total_size += 1 + 8;
  }

  // double delta_n = 3;
  if (!(this->delta_n() <= 0 && this->delta_n() >= 0)) {
    total_size += 1 + 8;
  }

  // double ecc = 4;
  if (!(this->ecc() <= 0 && this->ecc() >= 0)) {
    total_size += 1 + 8;
  }

  // double sqrtA = 5;
  if (!(this->sqrta() <= 0 && this->sqrta() >= 0)) {
    total_size += 1 + 8;
  }

  // double OMEGA_0 = 6;
  if (!(this->omega_0() <= 0 && this->omega_0() >= 0)) {
    total_size += 1 + 8;
  }

  // double i_0 = 7;
  if (!(this->i_0() <= 0 && this->i_0() >= 0)) {
    total_size += 1 + 8;
  }

  // double omega = 8;
  if (!(this->omega() <= 0 && this->omega() >= 0)) {
    total_size += 1 + 8;
  }

  // double OMEGAdot = 9;
  if (!(this->omegadot() <= 0 && this->omegadot() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 PRN = 1;
  if (this->prn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prn());
  }

  // int32 toe = 17;
  if (this->toe() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_toe());
  }

  // double idot = 10;
  if (!(this->idot() <= 0 && this->idot() >= 0)) {
    total_size += 1 + 8;
  }

  // double Cuc = 11;
  if (!(this->cuc() <= 0 && this->cuc() >= 0)) {
    total_size += 1 + 8;
  }

  // double Cus = 12;
  if (!(this->cus() <= 0 && this->cus() >= 0)) {
    total_size += 1 + 8;
  }

  // double Crc = 13;
  if (!(this->crc() <= 0 && this->crc() >= 0)) {
    total_size += 1 + 8;
  }

  // double Crs = 14;
  if (!(this->crs() <= 0 && this->crs() >= 0)) {
    total_size += 1 + 8;
  }

  // double Cic = 15;
  if (!(this->cic() <= 0 && this->cic() >= 0)) {
    total_size += 1 + 8;
  }

  // double Cis = 16;
  if (!(this->cis() <= 0 && this->cis() >= 0)) {
    total_size += 2 + 8;
  }

  // double af0 = 19;
  if (!(this->af0() <= 0 && this->af0() >= 0)) {
    total_size += 2 + 8;
  }

  // double af1 = 20;
  if (!(this->af1() <= 0 && this->af1() >= 0)) {
    total_size += 2 + 8;
  }

  // double af2 = 21;
  if (!(this->af2() <= 0 && this->af2() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 toc = 18;
  if (this->toc() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_toc());
  }

  // int32 WN = 24;
  if (this->wn() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_wn());
  }

  // double satClkDrift = 22;
  if (!(this->satclkdrift() <= 0 && this->satclkdrift() >= 0)) {
    total_size += 2 + 8;
  }

  // double dtr = 23;
  if (!(this->dtr() <= 0 && this->dtr() >= 0)) {
    total_size += 2 + 8;
  }

  // int32 tow = 25;
  if (this->tow() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tow());
  }

  // int32 IOD_ephemeris = 26;
  if (this->iod_ephemeris() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iod_ephemeris());
  }

  // int32 IOD_nav = 27;
  if (this->iod_nav() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_iod_nav());
  }

  // int32 SISA = 28;
  if (this->sisa() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sisa());
  }

  // int32 E5a_HS = 29;
  if (this->e5a_hs() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_e5a_hs());
  }

  // int32 E5b_HS = 30;
  if (this->e5b_hs() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_e5b_hs());
  }

  // int32 E1B_HS = 31;
  if (this->e1b_hs() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_e1b_hs());
  }

  // bool E5a_DVS = 32;
  if (this->e5a_dvs() != 0) {
    total_size += 2 + 1;
  }

  // bool E5b_DVS = 33;
  if (this->e5b_dvs() != 0) {
    total_size += 2 + 1;
  }

  // bool E1B_DVS = 34;
  if (this->e1b_dvs() != 0) {
    total_size += 2 + 1;
  }

  // double BGD_E1E5a = 35;
  if (!(this->bgd_e1e5a() <= 0 && this->bgd_e1e5a() >= 0)) {
    total_size += 2 + 8;
  }

  // double BGD_E1E5b = 36;
  if (!(this->bgd_e1e5b() <= 0 && this->bgd_e1e5b() >= 0)) {
    total_size += 2 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GalileoEphemeris::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnss_sdr.GalileoEphemeris)
  GOOGLE_DCHECK_NE(&from, this);
  const GalileoEphemeris* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GalileoEphemeris>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnss_sdr.GalileoEphemeris)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnss_sdr.GalileoEphemeris)
    MergeFrom(*source);
  }
}

void GalileoEphemeris::MergeFrom(const GalileoEphemeris& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnss_sdr.GalileoEphemeris)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!(from.m_0() <= 0 && from.m_0() >= 0)) {
    _internal_set_m_0(from._internal_m_0());
  }
  if (!(from.delta_n() <= 0 && from.delta_n() >= 0)) {
    _internal_set_delta_n(from._internal_delta_n());
  }
  if (!(from.ecc() <= 0 && from.ecc() >= 0)) {
    _internal_set_ecc(from._internal_ecc());
  }
  if (!(from.sqrta() <= 0 && from.sqrta() >= 0)) {
    _internal_set_sqrta(from._internal_sqrta());
  }
  if (!(from.omega_0() <= 0 && from.omega_0() >= 0)) {
    _internal_set_omega_0(from._internal_omega_0());
  }
  if (!(from.i_0() <= 0 && from.i_0() >= 0)) {
    _internal_set_i_0(from._internal_i_0());
  }
  if (!(from.omega() <= 0 && from.omega() >= 0)) {
    _internal_set_omega(from._internal_omega());
  }
  if (!(from.omegadot() <= 0 && from.omegadot() >= 0)) {
    _internal_set_omegadot(from._internal_omegadot());
  }
  if (from.prn() != 0) {
    _internal_set_prn(from._internal_prn());
  }
  if (from.toe() != 0) {
    _internal_set_toe(from._internal_toe());
  }
  if (!(from.idot() <= 0 && from.idot() >= 0)) {
    _internal_set_idot(from._internal_idot());
  }
  if (!(from.cuc() <= 0 && from.cuc() >= 0)) {
    _internal_set_cuc(from._internal_cuc());
  }
  if (!(from.cus() <= 0 && from.cus() >= 0)) {
    _internal_set_cus(from._internal_cus());
  }
  if (!(from.crc() <= 0 && from.crc() >= 0)) {
    _internal_set_crc(from._internal_crc());
  }
  if (!(from.crs() <= 0 && from.crs() >= 0)) {
    _internal_set_crs(from._internal_crs());
  }
  if (!(from.cic() <= 0 && from.cic() >= 0)) {
    _internal_set_cic(from._internal_cic());
  }
  if (!(from.cis() <= 0 && from.cis() >= 0)) {
    _internal_set_cis(from._internal_cis());
  }
  if (!(from.af0() <= 0 && from.af0() >= 0)) {
    _internal_set_af0(from._internal_af0());
  }
  if (!(from.af1() <= 0 && from.af1() >= 0)) {
    _internal_set_af1(from._internal_af1());
  }
  if (!(from.af2() <= 0 && from.af2() >= 0)) {
    _internal_set_af2(from._internal_af2());
  }
  if (from.toc() != 0) {
    _internal_set_toc(from._internal_toc());
  }
  if (from.wn() != 0) {
    _internal_set_wn(from._internal_wn());
  }
  if (!(from.satclkdrift() <= 0 && from.satclkdrift() >= 0)) {
    _internal_set_satclkdrift(from._internal_satclkdrift());
  }
  if (!(from.dtr() <= 0 && from.dtr() >= 0)) {
    _internal_set_dtr(from._internal_dtr());
  }
  if (from.tow() != 0) {
    _internal_set_tow(from._internal_tow());
  }
  if (from.iod_ephemeris() != 0) {
    _internal_set_iod_ephemeris(from._internal_iod_ephemeris());
  }
  if (from.iod_nav() != 0) {
    _internal_set_iod_nav(from._internal_iod_nav());
  }
  if (from.sisa() != 0) {
    _internal_set_sisa(from._internal_sisa());
  }
  if (from.e5a_hs() != 0) {
    _internal_set_e5a_hs(from._internal_e5a_hs());
  }
  if (from.e5b_hs() != 0) {
    _internal_set_e5b_hs(from._internal_e5b_hs());
  }
  if (from.e1b_hs() != 0) {
    _internal_set_e1b_hs(from._internal_e1b_hs());
  }
  if (from.e5a_dvs() != 0) {
    _internal_set_e5a_dvs(from._internal_e5a_dvs());
  }
  if (from.e5b_dvs() != 0) {
    _internal_set_e5b_dvs(from._internal_e5b_dvs());
  }
  if (from.e1b_dvs() != 0) {
    _internal_set_e1b_dvs(from._internal_e1b_dvs());
  }
  if (!(from.bgd_e1e5a() <= 0 && from.bgd_e1e5a() >= 0)) {
    _internal_set_bgd_e1e5a(from._internal_bgd_e1e5a());
  }
  if (!(from.bgd_e1e5b() <= 0 && from.bgd_e1e5b() >= 0)) {
    _internal_set_bgd_e1e5b(from._internal_bgd_e1e5b());
  }
}

void GalileoEphemeris::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnss_sdr.GalileoEphemeris)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GalileoEphemeris::CopyFrom(const GalileoEphemeris& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnss_sdr.GalileoEphemeris)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GalileoEphemeris::IsInitialized() const {
  return true;
}

void GalileoEphemeris::InternalSwap(GalileoEphemeris* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GalileoEphemeris, bgd_e1e5b_)
      + sizeof(GalileoEphemeris::bgd_e1e5b_)
      - PROTOBUF_FIELD_OFFSET(GalileoEphemeris, m_0_)>(
          reinterpret_cast<char*>(&m_0_),
          reinterpret_cast<char*>(&other->m_0_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GalileoEphemeris::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gnss_sdr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gnss_sdr::GalileoEphemeris* Arena::CreateMaybeMessage< ::gnss_sdr::GalileoEphemeris >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gnss_sdr::GalileoEphemeris >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
