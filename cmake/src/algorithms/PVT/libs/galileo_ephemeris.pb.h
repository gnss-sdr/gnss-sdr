// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: galileo_ephemeris.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_galileo_5fephemeris_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_galileo_5fephemeris_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_galileo_5fephemeris_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_galileo_5fephemeris_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_galileo_5fephemeris_2eproto;
namespace gnss_sdr {
class GalileoEphemeris;
class GalileoEphemerisDefaultTypeInternal;
extern GalileoEphemerisDefaultTypeInternal _GalileoEphemeris_default_instance_;
}  // namespace gnss_sdr
PROTOBUF_NAMESPACE_OPEN
template<> ::gnss_sdr::GalileoEphemeris* Arena::CreateMaybeMessage<::gnss_sdr::GalileoEphemeris>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gnss_sdr {

// ===================================================================

class GalileoEphemeris PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gnss_sdr.GalileoEphemeris) */ {
 public:
  inline GalileoEphemeris() : GalileoEphemeris(nullptr) {};
  virtual ~GalileoEphemeris();

  GalileoEphemeris(const GalileoEphemeris& from);
  GalileoEphemeris(GalileoEphemeris&& from) noexcept
    : GalileoEphemeris() {
    *this = ::std::move(from);
  }

  inline GalileoEphemeris& operator=(const GalileoEphemeris& from) {
    CopyFrom(from);
    return *this;
  }
  inline GalileoEphemeris& operator=(GalileoEphemeris&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GalileoEphemeris& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GalileoEphemeris* internal_default_instance() {
    return reinterpret_cast<const GalileoEphemeris*>(
               &_GalileoEphemeris_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GalileoEphemeris& a, GalileoEphemeris& b) {
    a.Swap(&b);
  }
  inline void Swap(GalileoEphemeris* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GalileoEphemeris* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GalileoEphemeris* New() const final {
    return CreateMaybeMessage<GalileoEphemeris>(nullptr);
  }

  GalileoEphemeris* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GalileoEphemeris>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GalileoEphemeris& from);
  void MergeFrom(const GalileoEphemeris& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GalileoEphemeris* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gnss_sdr.GalileoEphemeris";
  }
  protected:
  explicit GalileoEphemeris(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_galileo_5fephemeris_2eproto);
    return ::descriptor_table_galileo_5fephemeris_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kM0FieldNumber = 2,
    kDeltaNFieldNumber = 3,
    kEccFieldNumber = 4,
    kSqrtAFieldNumber = 5,
    kOMEGA0FieldNumber = 6,
    kI0FieldNumber = 7,
    kOmegaFieldNumber = 8,
    kOMEGAdotFieldNumber = 9,
    kPRNFieldNumber = 1,
    kToeFieldNumber = 17,
    kIdotFieldNumber = 10,
    kCucFieldNumber = 11,
    kCusFieldNumber = 12,
    kCrcFieldNumber = 13,
    kCrsFieldNumber = 14,
    kCicFieldNumber = 15,
    kCisFieldNumber = 16,
    kAf0FieldNumber = 19,
    kAf1FieldNumber = 20,
    kAf2FieldNumber = 21,
    kTocFieldNumber = 18,
    kWNFieldNumber = 24,
    kSatClkDriftFieldNumber = 22,
    kDtrFieldNumber = 23,
    kTowFieldNumber = 25,
    kIODEphemerisFieldNumber = 26,
    kIODNavFieldNumber = 27,
    kSISAFieldNumber = 28,
    kE5AHSFieldNumber = 29,
    kE5BHSFieldNumber = 30,
    kE1BHSFieldNumber = 31,
    kE5ADVSFieldNumber = 32,
    kE5BDVSFieldNumber = 33,
    kE1BDVSFieldNumber = 34,
    kBGDE1E5AFieldNumber = 35,
    kBGDE1E5BFieldNumber = 36,
  };
  // double M_0 = 2;
  void clear_m_0();
  double m_0() const;
  void set_m_0(double value);
  private:
  double _internal_m_0() const;
  void _internal_set_m_0(double value);
  public:

  // double delta_n = 3;
  void clear_delta_n();
  double delta_n() const;
  void set_delta_n(double value);
  private:
  double _internal_delta_n() const;
  void _internal_set_delta_n(double value);
  public:

  // double ecc = 4;
  void clear_ecc();
  double ecc() const;
  void set_ecc(double value);
  private:
  double _internal_ecc() const;
  void _internal_set_ecc(double value);
  public:

  // double sqrtA = 5;
  void clear_sqrta();
  double sqrta() const;
  void set_sqrta(double value);
  private:
  double _internal_sqrta() const;
  void _internal_set_sqrta(double value);
  public:

  // double OMEGA_0 = 6;
  void clear_omega_0();
  double omega_0() const;
  void set_omega_0(double value);
  private:
  double _internal_omega_0() const;
  void _internal_set_omega_0(double value);
  public:

  // double i_0 = 7;
  void clear_i_0();
  double i_0() const;
  void set_i_0(double value);
  private:
  double _internal_i_0() const;
  void _internal_set_i_0(double value);
  public:

  // double omega = 8;
  void clear_omega();
  double omega() const;
  void set_omega(double value);
  private:
  double _internal_omega() const;
  void _internal_set_omega(double value);
  public:

  // double OMEGAdot = 9;
  void clear_omegadot();
  double omegadot() const;
  void set_omegadot(double value);
  private:
  double _internal_omegadot() const;
  void _internal_set_omegadot(double value);
  public:

  // int32 PRN = 1;
  void clear_prn();
  ::PROTOBUF_NAMESPACE_ID::int32 prn() const;
  void set_prn(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prn() const;
  void _internal_set_prn(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 toe = 17;
  void clear_toe();
  ::PROTOBUF_NAMESPACE_ID::int32 toe() const;
  void set_toe(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_toe() const;
  void _internal_set_toe(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double idot = 10;
  void clear_idot();
  double idot() const;
  void set_idot(double value);
  private:
  double _internal_idot() const;
  void _internal_set_idot(double value);
  public:

  // double Cuc = 11;
  void clear_cuc();
  double cuc() const;
  void set_cuc(double value);
  private:
  double _internal_cuc() const;
  void _internal_set_cuc(double value);
  public:

  // double Cus = 12;
  void clear_cus();
  double cus() const;
  void set_cus(double value);
  private:
  double _internal_cus() const;
  void _internal_set_cus(double value);
  public:

  // double Crc = 13;
  void clear_crc();
  double crc() const;
  void set_crc(double value);
  private:
  double _internal_crc() const;
  void _internal_set_crc(double value);
  public:

  // double Crs = 14;
  void clear_crs();
  double crs() const;
  void set_crs(double value);
  private:
  double _internal_crs() const;
  void _internal_set_crs(double value);
  public:

  // double Cic = 15;
  void clear_cic();
  double cic() const;
  void set_cic(double value);
  private:
  double _internal_cic() const;
  void _internal_set_cic(double value);
  public:

  // double Cis = 16;
  void clear_cis();
  double cis() const;
  void set_cis(double value);
  private:
  double _internal_cis() const;
  void _internal_set_cis(double value);
  public:

  // double af0 = 19;
  void clear_af0();
  double af0() const;
  void set_af0(double value);
  private:
  double _internal_af0() const;
  void _internal_set_af0(double value);
  public:

  // double af1 = 20;
  void clear_af1();
  double af1() const;
  void set_af1(double value);
  private:
  double _internal_af1() const;
  void _internal_set_af1(double value);
  public:

  // double af2 = 21;
  void clear_af2();
  double af2() const;
  void set_af2(double value);
  private:
  double _internal_af2() const;
  void _internal_set_af2(double value);
  public:

  // int32 toc = 18;
  void clear_toc();
  ::PROTOBUF_NAMESPACE_ID::int32 toc() const;
  void set_toc(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_toc() const;
  void _internal_set_toc(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 WN = 24;
  void clear_wn();
  ::PROTOBUF_NAMESPACE_ID::int32 wn() const;
  void set_wn(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_wn() const;
  void _internal_set_wn(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double satClkDrift = 22;
  void clear_satclkdrift();
  double satclkdrift() const;
  void set_satclkdrift(double value);
  private:
  double _internal_satclkdrift() const;
  void _internal_set_satclkdrift(double value);
  public:

  // double dtr = 23;
  void clear_dtr();
  double dtr() const;
  void set_dtr(double value);
  private:
  double _internal_dtr() const;
  void _internal_set_dtr(double value);
  public:

  // int32 tow = 25;
  void clear_tow();
  ::PROTOBUF_NAMESPACE_ID::int32 tow() const;
  void set_tow(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tow() const;
  void _internal_set_tow(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 IOD_ephemeris = 26;
  void clear_iod_ephemeris();
  ::PROTOBUF_NAMESPACE_ID::int32 iod_ephemeris() const;
  void set_iod_ephemeris(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iod_ephemeris() const;
  void _internal_set_iod_ephemeris(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 IOD_nav = 27;
  void clear_iod_nav();
  ::PROTOBUF_NAMESPACE_ID::int32 iod_nav() const;
  void set_iod_nav(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_iod_nav() const;
  void _internal_set_iod_nav(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 SISA = 28;
  void clear_sisa();
  ::PROTOBUF_NAMESPACE_ID::int32 sisa() const;
  void set_sisa(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sisa() const;
  void _internal_set_sisa(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 E5a_HS = 29;
  void clear_e5a_hs();
  ::PROTOBUF_NAMESPACE_ID::int32 e5a_hs() const;
  void set_e5a_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_e5a_hs() const;
  void _internal_set_e5a_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 E5b_HS = 30;
  void clear_e5b_hs();
  ::PROTOBUF_NAMESPACE_ID::int32 e5b_hs() const;
  void set_e5b_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_e5b_hs() const;
  void _internal_set_e5b_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 E1B_HS = 31;
  void clear_e1b_hs();
  ::PROTOBUF_NAMESPACE_ID::int32 e1b_hs() const;
  void set_e1b_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_e1b_hs() const;
  void _internal_set_e1b_hs(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool E5a_DVS = 32;
  void clear_e5a_dvs();
  bool e5a_dvs() const;
  void set_e5a_dvs(bool value);
  private:
  bool _internal_e5a_dvs() const;
  void _internal_set_e5a_dvs(bool value);
  public:

  // bool E5b_DVS = 33;
  void clear_e5b_dvs();
  bool e5b_dvs() const;
  void set_e5b_dvs(bool value);
  private:
  bool _internal_e5b_dvs() const;
  void _internal_set_e5b_dvs(bool value);
  public:

  // bool E1B_DVS = 34;
  void clear_e1b_dvs();
  bool e1b_dvs() const;
  void set_e1b_dvs(bool value);
  private:
  bool _internal_e1b_dvs() const;
  void _internal_set_e1b_dvs(bool value);
  public:

  // double BGD_E1E5a = 35;
  void clear_bgd_e1e5a();
  double bgd_e1e5a() const;
  void set_bgd_e1e5a(double value);
  private:
  double _internal_bgd_e1e5a() const;
  void _internal_set_bgd_e1e5a(double value);
  public:

  // double BGD_E1E5b = 36;
  void clear_bgd_e1e5b();
  double bgd_e1e5b() const;
  void set_bgd_e1e5b(double value);
  private:
  double _internal_bgd_e1e5b() const;
  void _internal_set_bgd_e1e5b(double value);
  public:

  // @@protoc_insertion_point(class_scope:gnss_sdr.GalileoEphemeris)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double m_0_;
  double delta_n_;
  double ecc_;
  double sqrta_;
  double omega_0_;
  double i_0_;
  double omega_;
  double omegadot_;
  ::PROTOBUF_NAMESPACE_ID::int32 prn_;
  ::PROTOBUF_NAMESPACE_ID::int32 toe_;
  double idot_;
  double cuc_;
  double cus_;
  double crc_;
  double crs_;
  double cic_;
  double cis_;
  double af0_;
  double af1_;
  double af2_;
  ::PROTOBUF_NAMESPACE_ID::int32 toc_;
  ::PROTOBUF_NAMESPACE_ID::int32 wn_;
  double satclkdrift_;
  double dtr_;
  ::PROTOBUF_NAMESPACE_ID::int32 tow_;
  ::PROTOBUF_NAMESPACE_ID::int32 iod_ephemeris_;
  ::PROTOBUF_NAMESPACE_ID::int32 iod_nav_;
  ::PROTOBUF_NAMESPACE_ID::int32 sisa_;
  ::PROTOBUF_NAMESPACE_ID::int32 e5a_hs_;
  ::PROTOBUF_NAMESPACE_ID::int32 e5b_hs_;
  ::PROTOBUF_NAMESPACE_ID::int32 e1b_hs_;
  bool e5a_dvs_;
  bool e5b_dvs_;
  bool e1b_dvs_;
  double bgd_e1e5a_;
  double bgd_e1e5b_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_galileo_5fephemeris_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GalileoEphemeris

// int32 PRN = 1;
inline void GalileoEphemeris::clear_prn() {
  prn_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_prn() const {
  return prn_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::prn() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.PRN)
  return _internal_prn();
}
inline void GalileoEphemeris::_internal_set_prn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prn_ = value;
}
inline void GalileoEphemeris::set_prn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prn(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.PRN)
}

// double M_0 = 2;
inline void GalileoEphemeris::clear_m_0() {
  m_0_ = 0;
}
inline double GalileoEphemeris::_internal_m_0() const {
  return m_0_;
}
inline double GalileoEphemeris::m_0() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.M_0)
  return _internal_m_0();
}
inline void GalileoEphemeris::_internal_set_m_0(double value) {
  
  m_0_ = value;
}
inline void GalileoEphemeris::set_m_0(double value) {
  _internal_set_m_0(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.M_0)
}

// double delta_n = 3;
inline void GalileoEphemeris::clear_delta_n() {
  delta_n_ = 0;
}
inline double GalileoEphemeris::_internal_delta_n() const {
  return delta_n_;
}
inline double GalileoEphemeris::delta_n() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.delta_n)
  return _internal_delta_n();
}
inline void GalileoEphemeris::_internal_set_delta_n(double value) {
  
  delta_n_ = value;
}
inline void GalileoEphemeris::set_delta_n(double value) {
  _internal_set_delta_n(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.delta_n)
}

// double ecc = 4;
inline void GalileoEphemeris::clear_ecc() {
  ecc_ = 0;
}
inline double GalileoEphemeris::_internal_ecc() const {
  return ecc_;
}
inline double GalileoEphemeris::ecc() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.ecc)
  return _internal_ecc();
}
inline void GalileoEphemeris::_internal_set_ecc(double value) {
  
  ecc_ = value;
}
inline void GalileoEphemeris::set_ecc(double value) {
  _internal_set_ecc(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.ecc)
}

// double sqrtA = 5;
inline void GalileoEphemeris::clear_sqrta() {
  sqrta_ = 0;
}
inline double GalileoEphemeris::_internal_sqrta() const {
  return sqrta_;
}
inline double GalileoEphemeris::sqrta() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.sqrtA)
  return _internal_sqrta();
}
inline void GalileoEphemeris::_internal_set_sqrta(double value) {
  
  sqrta_ = value;
}
inline void GalileoEphemeris::set_sqrta(double value) {
  _internal_set_sqrta(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.sqrtA)
}

// double OMEGA_0 = 6;
inline void GalileoEphemeris::clear_omega_0() {
  omega_0_ = 0;
}
inline double GalileoEphemeris::_internal_omega_0() const {
  return omega_0_;
}
inline double GalileoEphemeris::omega_0() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.OMEGA_0)
  return _internal_omega_0();
}
inline void GalileoEphemeris::_internal_set_omega_0(double value) {
  
  omega_0_ = value;
}
inline void GalileoEphemeris::set_omega_0(double value) {
  _internal_set_omega_0(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.OMEGA_0)
}

// double i_0 = 7;
inline void GalileoEphemeris::clear_i_0() {
  i_0_ = 0;
}
inline double GalileoEphemeris::_internal_i_0() const {
  return i_0_;
}
inline double GalileoEphemeris::i_0() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.i_0)
  return _internal_i_0();
}
inline void GalileoEphemeris::_internal_set_i_0(double value) {
  
  i_0_ = value;
}
inline void GalileoEphemeris::set_i_0(double value) {
  _internal_set_i_0(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.i_0)
}

// double omega = 8;
inline void GalileoEphemeris::clear_omega() {
  omega_ = 0;
}
inline double GalileoEphemeris::_internal_omega() const {
  return omega_;
}
inline double GalileoEphemeris::omega() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.omega)
  return _internal_omega();
}
inline void GalileoEphemeris::_internal_set_omega(double value) {
  
  omega_ = value;
}
inline void GalileoEphemeris::set_omega(double value) {
  _internal_set_omega(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.omega)
}

// double OMEGAdot = 9;
inline void GalileoEphemeris::clear_omegadot() {
  omegadot_ = 0;
}
inline double GalileoEphemeris::_internal_omegadot() const {
  return omegadot_;
}
inline double GalileoEphemeris::omegadot() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.OMEGAdot)
  return _internal_omegadot();
}
inline void GalileoEphemeris::_internal_set_omegadot(double value) {
  
  omegadot_ = value;
}
inline void GalileoEphemeris::set_omegadot(double value) {
  _internal_set_omegadot(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.OMEGAdot)
}

// double idot = 10;
inline void GalileoEphemeris::clear_idot() {
  idot_ = 0;
}
inline double GalileoEphemeris::_internal_idot() const {
  return idot_;
}
inline double GalileoEphemeris::idot() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.idot)
  return _internal_idot();
}
inline void GalileoEphemeris::_internal_set_idot(double value) {
  
  idot_ = value;
}
inline void GalileoEphemeris::set_idot(double value) {
  _internal_set_idot(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.idot)
}

// double Cuc = 11;
inline void GalileoEphemeris::clear_cuc() {
  cuc_ = 0;
}
inline double GalileoEphemeris::_internal_cuc() const {
  return cuc_;
}
inline double GalileoEphemeris::cuc() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Cuc)
  return _internal_cuc();
}
inline void GalileoEphemeris::_internal_set_cuc(double value) {
  
  cuc_ = value;
}
inline void GalileoEphemeris::set_cuc(double value) {
  _internal_set_cuc(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Cuc)
}

// double Cus = 12;
inline void GalileoEphemeris::clear_cus() {
  cus_ = 0;
}
inline double GalileoEphemeris::_internal_cus() const {
  return cus_;
}
inline double GalileoEphemeris::cus() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Cus)
  return _internal_cus();
}
inline void GalileoEphemeris::_internal_set_cus(double value) {
  
  cus_ = value;
}
inline void GalileoEphemeris::set_cus(double value) {
  _internal_set_cus(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Cus)
}

// double Crc = 13;
inline void GalileoEphemeris::clear_crc() {
  crc_ = 0;
}
inline double GalileoEphemeris::_internal_crc() const {
  return crc_;
}
inline double GalileoEphemeris::crc() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Crc)
  return _internal_crc();
}
inline void GalileoEphemeris::_internal_set_crc(double value) {
  
  crc_ = value;
}
inline void GalileoEphemeris::set_crc(double value) {
  _internal_set_crc(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Crc)
}

// double Crs = 14;
inline void GalileoEphemeris::clear_crs() {
  crs_ = 0;
}
inline double GalileoEphemeris::_internal_crs() const {
  return crs_;
}
inline double GalileoEphemeris::crs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Crs)
  return _internal_crs();
}
inline void GalileoEphemeris::_internal_set_crs(double value) {
  
  crs_ = value;
}
inline void GalileoEphemeris::set_crs(double value) {
  _internal_set_crs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Crs)
}

// double Cic = 15;
inline void GalileoEphemeris::clear_cic() {
  cic_ = 0;
}
inline double GalileoEphemeris::_internal_cic() const {
  return cic_;
}
inline double GalileoEphemeris::cic() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Cic)
  return _internal_cic();
}
inline void GalileoEphemeris::_internal_set_cic(double value) {
  
  cic_ = value;
}
inline void GalileoEphemeris::set_cic(double value) {
  _internal_set_cic(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Cic)
}

// double Cis = 16;
inline void GalileoEphemeris::clear_cis() {
  cis_ = 0;
}
inline double GalileoEphemeris::_internal_cis() const {
  return cis_;
}
inline double GalileoEphemeris::cis() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.Cis)
  return _internal_cis();
}
inline void GalileoEphemeris::_internal_set_cis(double value) {
  
  cis_ = value;
}
inline void GalileoEphemeris::set_cis(double value) {
  _internal_set_cis(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.Cis)
}

// int32 toe = 17;
inline void GalileoEphemeris::clear_toe() {
  toe_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_toe() const {
  return toe_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::toe() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.toe)
  return _internal_toe();
}
inline void GalileoEphemeris::_internal_set_toe(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  toe_ = value;
}
inline void GalileoEphemeris::set_toe(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_toe(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.toe)
}

// int32 toc = 18;
inline void GalileoEphemeris::clear_toc() {
  toc_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_toc() const {
  return toc_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::toc() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.toc)
  return _internal_toc();
}
inline void GalileoEphemeris::_internal_set_toc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  toc_ = value;
}
inline void GalileoEphemeris::set_toc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_toc(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.toc)
}

// double af0 = 19;
inline void GalileoEphemeris::clear_af0() {
  af0_ = 0;
}
inline double GalileoEphemeris::_internal_af0() const {
  return af0_;
}
inline double GalileoEphemeris::af0() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.af0)
  return _internal_af0();
}
inline void GalileoEphemeris::_internal_set_af0(double value) {
  
  af0_ = value;
}
inline void GalileoEphemeris::set_af0(double value) {
  _internal_set_af0(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.af0)
}

// double af1 = 20;
inline void GalileoEphemeris::clear_af1() {
  af1_ = 0;
}
inline double GalileoEphemeris::_internal_af1() const {
  return af1_;
}
inline double GalileoEphemeris::af1() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.af1)
  return _internal_af1();
}
inline void GalileoEphemeris::_internal_set_af1(double value) {
  
  af1_ = value;
}
inline void GalileoEphemeris::set_af1(double value) {
  _internal_set_af1(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.af1)
}

// double af2 = 21;
inline void GalileoEphemeris::clear_af2() {
  af2_ = 0;
}
inline double GalileoEphemeris::_internal_af2() const {
  return af2_;
}
inline double GalileoEphemeris::af2() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.af2)
  return _internal_af2();
}
inline void GalileoEphemeris::_internal_set_af2(double value) {
  
  af2_ = value;
}
inline void GalileoEphemeris::set_af2(double value) {
  _internal_set_af2(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.af2)
}

// double satClkDrift = 22;
inline void GalileoEphemeris::clear_satclkdrift() {
  satclkdrift_ = 0;
}
inline double GalileoEphemeris::_internal_satclkdrift() const {
  return satclkdrift_;
}
inline double GalileoEphemeris::satclkdrift() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.satClkDrift)
  return _internal_satclkdrift();
}
inline void GalileoEphemeris::_internal_set_satclkdrift(double value) {
  
  satclkdrift_ = value;
}
inline void GalileoEphemeris::set_satclkdrift(double value) {
  _internal_set_satclkdrift(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.satClkDrift)
}

// double dtr = 23;
inline void GalileoEphemeris::clear_dtr() {
  dtr_ = 0;
}
inline double GalileoEphemeris::_internal_dtr() const {
  return dtr_;
}
inline double GalileoEphemeris::dtr() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.dtr)
  return _internal_dtr();
}
inline void GalileoEphemeris::_internal_set_dtr(double value) {
  
  dtr_ = value;
}
inline void GalileoEphemeris::set_dtr(double value) {
  _internal_set_dtr(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.dtr)
}

// int32 WN = 24;
inline void GalileoEphemeris::clear_wn() {
  wn_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_wn() const {
  return wn_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::wn() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.WN)
  return _internal_wn();
}
inline void GalileoEphemeris::_internal_set_wn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  wn_ = value;
}
inline void GalileoEphemeris::set_wn(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_wn(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.WN)
}

// int32 tow = 25;
inline void GalileoEphemeris::clear_tow() {
  tow_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_tow() const {
  return tow_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::tow() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.tow)
  return _internal_tow();
}
inline void GalileoEphemeris::_internal_set_tow(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tow_ = value;
}
inline void GalileoEphemeris::set_tow(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tow(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.tow)
}

// int32 IOD_ephemeris = 26;
inline void GalileoEphemeris::clear_iod_ephemeris() {
  iod_ephemeris_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_iod_ephemeris() const {
  return iod_ephemeris_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::iod_ephemeris() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.IOD_ephemeris)
  return _internal_iod_ephemeris();
}
inline void GalileoEphemeris::_internal_set_iod_ephemeris(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  iod_ephemeris_ = value;
}
inline void GalileoEphemeris::set_iod_ephemeris(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iod_ephemeris(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.IOD_ephemeris)
}

// int32 IOD_nav = 27;
inline void GalileoEphemeris::clear_iod_nav() {
  iod_nav_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_iod_nav() const {
  return iod_nav_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::iod_nav() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.IOD_nav)
  return _internal_iod_nav();
}
inline void GalileoEphemeris::_internal_set_iod_nav(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  iod_nav_ = value;
}
inline void GalileoEphemeris::set_iod_nav(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_iod_nav(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.IOD_nav)
}

// int32 SISA = 28;
inline void GalileoEphemeris::clear_sisa() {
  sisa_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_sisa() const {
  return sisa_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::sisa() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.SISA)
  return _internal_sisa();
}
inline void GalileoEphemeris::_internal_set_sisa(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sisa_ = value;
}
inline void GalileoEphemeris::set_sisa(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sisa(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.SISA)
}

// int32 E5a_HS = 29;
inline void GalileoEphemeris::clear_e5a_hs() {
  e5a_hs_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_e5a_hs() const {
  return e5a_hs_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::e5a_hs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E5a_HS)
  return _internal_e5a_hs();
}
inline void GalileoEphemeris::_internal_set_e5a_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  e5a_hs_ = value;
}
inline void GalileoEphemeris::set_e5a_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_e5a_hs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E5a_HS)
}

// int32 E5b_HS = 30;
inline void GalileoEphemeris::clear_e5b_hs() {
  e5b_hs_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_e5b_hs() const {
  return e5b_hs_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::e5b_hs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E5b_HS)
  return _internal_e5b_hs();
}
inline void GalileoEphemeris::_internal_set_e5b_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  e5b_hs_ = value;
}
inline void GalileoEphemeris::set_e5b_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_e5b_hs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E5b_HS)
}

// int32 E1B_HS = 31;
inline void GalileoEphemeris::clear_e1b_hs() {
  e1b_hs_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::_internal_e1b_hs() const {
  return e1b_hs_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GalileoEphemeris::e1b_hs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E1B_HS)
  return _internal_e1b_hs();
}
inline void GalileoEphemeris::_internal_set_e1b_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  e1b_hs_ = value;
}
inline void GalileoEphemeris::set_e1b_hs(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_e1b_hs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E1B_HS)
}

// bool E5a_DVS = 32;
inline void GalileoEphemeris::clear_e5a_dvs() {
  e5a_dvs_ = false;
}
inline bool GalileoEphemeris::_internal_e5a_dvs() const {
  return e5a_dvs_;
}
inline bool GalileoEphemeris::e5a_dvs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E5a_DVS)
  return _internal_e5a_dvs();
}
inline void GalileoEphemeris::_internal_set_e5a_dvs(bool value) {
  
  e5a_dvs_ = value;
}
inline void GalileoEphemeris::set_e5a_dvs(bool value) {
  _internal_set_e5a_dvs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E5a_DVS)
}

// bool E5b_DVS = 33;
inline void GalileoEphemeris::clear_e5b_dvs() {
  e5b_dvs_ = false;
}
inline bool GalileoEphemeris::_internal_e5b_dvs() const {
  return e5b_dvs_;
}
inline bool GalileoEphemeris::e5b_dvs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E5b_DVS)
  return _internal_e5b_dvs();
}
inline void GalileoEphemeris::_internal_set_e5b_dvs(bool value) {
  
  e5b_dvs_ = value;
}
inline void GalileoEphemeris::set_e5b_dvs(bool value) {
  _internal_set_e5b_dvs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E5b_DVS)
}

// bool E1B_DVS = 34;
inline void GalileoEphemeris::clear_e1b_dvs() {
  e1b_dvs_ = false;
}
inline bool GalileoEphemeris::_internal_e1b_dvs() const {
  return e1b_dvs_;
}
inline bool GalileoEphemeris::e1b_dvs() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.E1B_DVS)
  return _internal_e1b_dvs();
}
inline void GalileoEphemeris::_internal_set_e1b_dvs(bool value) {
  
  e1b_dvs_ = value;
}
inline void GalileoEphemeris::set_e1b_dvs(bool value) {
  _internal_set_e1b_dvs(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.E1B_DVS)
}

// double BGD_E1E5a = 35;
inline void GalileoEphemeris::clear_bgd_e1e5a() {
  bgd_e1e5a_ = 0;
}
inline double GalileoEphemeris::_internal_bgd_e1e5a() const {
  return bgd_e1e5a_;
}
inline double GalileoEphemeris::bgd_e1e5a() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.BGD_E1E5a)
  return _internal_bgd_e1e5a();
}
inline void GalileoEphemeris::_internal_set_bgd_e1e5a(double value) {
  
  bgd_e1e5a_ = value;
}
inline void GalileoEphemeris::set_bgd_e1e5a(double value) {
  _internal_set_bgd_e1e5a(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.BGD_E1E5a)
}

// double BGD_E1E5b = 36;
inline void GalileoEphemeris::clear_bgd_e1e5b() {
  bgd_e1e5b_ = 0;
}
inline double GalileoEphemeris::_internal_bgd_e1e5b() const {
  return bgd_e1e5b_;
}
inline double GalileoEphemeris::bgd_e1e5b() const {
  // @@protoc_insertion_point(field_get:gnss_sdr.GalileoEphemeris.BGD_E1E5b)
  return _internal_bgd_e1e5b();
}
inline void GalileoEphemeris::_internal_set_bgd_e1e5b(double value) {
  
  bgd_e1e5b_ = value;
}
inline void GalileoEphemeris::set_bgd_e1e5b(double value) {
  _internal_set_bgd_e1e5b(value);
  // @@protoc_insertion_point(field_set:gnss_sdr.GalileoEphemeris.BGD_E1E5b)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gnss_sdr

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_galileo_5fephemeris_2eproto
